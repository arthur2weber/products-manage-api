version: "3.7"
services:
  app:
    build:
      args:
        user: api
        uid: 1000
      context: ./
      dockerfile: ./.docker/php/Dockerfile
    image: products-manage-api
    container_name: products-manage-api
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - products_manage_network

  db:
    container_name: products-manage-db
    image: postgres:14
    volumes:
      - ./.docker/postgres/pgdata:/var/lib/postgresql/data
      - ./.docker/postgres/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    networks:
      - products_manage_network

  nginx:
    image: nginx:alpine
    container_name: products-manage-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./.docker/nginx:/etc/nginx/conf.d/
    networks:
      - products_manage_network

  redis:
    container_name: products-manage-redis
    image: redis:6.2-alpine
    environment:
      REDIS_USERNAME: redis
      REDIS_PASSWORD: redis
    command: redis-server --requirepass "${REDIS_PASSWORD}" --appendonly yes
    networks:
      - products_manage_network

networks:
  products_manage_network:
    driver: bridge